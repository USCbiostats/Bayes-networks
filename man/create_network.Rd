% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bnetwork.R
\name{create_network}
\alias{create_network}
\title{Create network object}
\usage{
create_network(source = numeric(), target = numeric(),
  node_labels = NULL, node_type = NULL)
}
\arguments{
\item{source}{A numeric or integer vector denoting source of the egdes in the
network. Must be the same length and type as \code{target}.}

\item{target}{A numeric or integer vector denoting source of the egdes in the
network. Must be the same length and type as \code{source}.}

\item{node_labels}{A numeric or integer vector denoting the possible nodes
available in the network. Defaults to NULL.}

\item{node_type}{A character vector denoting the type of node. Must be one of
"neither", "source" or "sink". Must be the  same length as \code{node_labels}.
Defaults to "neither".}
}
\value{
bayesnetworks_network object
}
\description{
This function creates a network object used in \code{main_fun}.
}
\details{
The labels given by \code{source} and \code{target} must match the labels by
\code{node_labels} if given. However \code{node_labels} can nodes with no egdes. If
\code{node_labels} is left unchanged then it is assumed that all the nodes is
represented in \code{source} and \code{target}.

The possible node types specified by \code{node_type} have to be of the following
\itemize{
\item "source", this node doesn't have any parents.
\item "sink", this node  doesn't have any children.
\item "neither", this node doesn't have any restrictions placed on it.
}

If \code{node_type} is left unchanged then  all nodes will be designated "neither"
and will thus not have any restrictions placed on them.
}
\examples{
create_network(1, 2, c(1, 2))
}
